generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ApiKey {
  id        String    @id
  key       String    @unique
  name      String
  userId    String?
  scopes    String[]
  expiresAt DateTime?
  createdAt DateTime  @default(now())
  lastUsed  DateTime?
}

model AppSettings {
  id                   String  @id
  userId               String  @unique
  detectionThreshold   Float?  @default(0.5)
  detectionModel       String? @default("Xenova/yolos-tiny")
  detectionDtype       String? @default("fp16")
  language             String? @default("en")
  theme                String? @default("system")
  notificationsEnabled Boolean @default(true)
  User                 User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DetectedObject {
  id                String          @id
  objectDetectionId String
  label             String
  confidence        Float
  boundingBox       Json
  attributes        Json?
  ObjectDetection   ObjectDetection @relation(fields: [objectDetectionId], references: [id], onDelete: Cascade)
}

model FaceRecognition {
  id               String           @id
  visionAnalysisId String           @unique
  userId           String
  threshold        Float            @default(0.5)
  processingTimeMs Int?
  User             User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  VisionAnalysis   VisionAnalysis   @relation(fields: [visionAnalysisId], references: [id], onDelete: Cascade)
  RecognizedFace   RecognizedFace[]
}

model ImageDescription {
  id               String         @id
  visionAnalysisId String         @unique
  userId           String
  modelName        String
  prompt           String
  maxNewTokens     Int?
  temperature      Float?
  description      String
  processingTimeMs Int?
  User             User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  VisionAnalysis   VisionAnalysis @relation(fields: [visionAnalysisId], references: [id], onDelete: Cascade)
}

model ObjectDetection {
  id               String           @id
  visionAnalysisId String           @unique
  userId           String
  modelName        String
  modelSettings    Json?
  processingTimeMs Int?
  DetectedObject   DetectedObject[]
  User             User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  VisionAnalysis   VisionAnalysis   @relation(fields: [visionAnalysisId], references: [id], onDelete: Cascade)
}

model RecognizedFace {
  id                String          @id
  faceRecognitionId String
  personId          String?
  personName        String?
  confidence        Float
  boundingBox       Json?
  attributes        Json?
  FaceRecognition   FaceRecognition @relation(fields: [faceRecognitionId], references: [id], onDelete: Cascade)
}

model Session {
  id             String           @id
  userId         String
  startTime      DateTime         @default(now())
  endTime        DateTime?
  deviceInfo     Json?
  User           User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  VisionAnalysis VisionAnalysis[]
}

model SystemLog {
  id        String   @id
  level     String
  message   String
  metadata  Json?
  timestamp DateTime @default(now())
  userId    String?
  sessionId String?
}

model User {
  id               String             @id
  username         String             @unique
  email            String             @unique
  passwordHash     String
  createdAt        DateTime           @default(now())
  lastLogin        DateTime?
  AppSettings      AppSettings?
  FaceRecognition  FaceRecognition[]
  ImageDescription ImageDescription[]
  ObjectDetection  ObjectDetection[]
  Session          Session[]
  VisionAnalysis   VisionAnalysis[]
}

model VisionAnalysis {
  id               String            @id
  userId           String
  sessionId        String?
  createdAt        DateTime          @default(now())
  imageHash        String?
  imageFormat      String?
  fileName         String?
  imagePath        String?
  analysisType     String
  FaceRecognition  FaceRecognition?
  ImageDescription ImageDescription?
  ObjectDetection  ObjectDetection?
  Session          Session?          @relation(fields: [sessionId], references: [id])
  User             User              @relation(fields: [userId], references: [id], onDelete: Cascade)
}
